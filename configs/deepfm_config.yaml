# dataset config
field_separator: "\t"  #指定数据集field的分隔符
seq_separator: " "     #指定数据集中token_seq或者float_seq域里的分隔符
USER_ID_FIELD: u_id       #指定用户id域
ITEM_ID_FIELD: c_id       #指定物品id域
RATING_FIELD: rating         #指定打分rating域
TIME_FIELD: time_registered  #指定时间域
LABEL_FIELD: certified       #指定标签域
NEG_PREFIX: neg_   #指定负采样前缀
#设置一个阈值，认为rating高于该值的是正例，反之是负例
threshold:
    rating: 9

#指定从什么文件里读什么列
load_col:
    inter: [u_id, c_id, rating]
    user: [u_id, gender, age, education]
    item: [c_id, course_code, full_title]

# model config
embedding_size: 32

# training settings
epochs: 500              #训练的最大轮数
train_batch_size: 8192   #训练的 batch_size
learner: adam            #使用的 pytorch 内置优化器
training_neg_sample_num: 0 #负采样数目
learning_rate: 0.001     #学习率
dropout_prob: 0.1        #随机丢弃以防止过拟合
mlp_hidden_size: [256, 256, 256] #隐藏层尺寸
eval_step: 4             #每次训练后做 evaluation 的次数
stopping_step: 16        #控制训练收敛的步骤数，在该步骤数内若选取的评测标准没有什么变化，就可以提前停止了

# evaluation settings
eval_setting: RO_RS   #对数据随机重排，设置按比例划分数据集
group_by_user: True  #是否将一个user的记录划到一个组里
split_ratio: [0.8,0.1,0.1]   #切分比例
metrics: ["AUC", "LogLoss", "MAE", "RMSE"]  #评测标准
valid_metric: AUC      #选取哪个评测标准作为作为提前停止训练的标准
eval_batch_size: 4096  #评测的 batch_size
